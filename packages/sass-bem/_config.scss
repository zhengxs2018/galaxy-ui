@use 'sass:map';

// Default sass-bem configuration settings.
//
// @type map
//
// @prop {boolean} debug [false] - Turn debug mode on/off. To get outlines on selectors.
//
// @prop {string} separator.element [__] - Element separator from parent block.
//
// @prop {string} separator.modifier [--] - Modifier separator from parent block.
//
// @prop {string} separator.state [-] - States separator from parent block.
//
// @prop {string} namespace.component [c] - Component selector namespace.
//
// @prop {string} namespace.hack [_] - Hack selector namespace.
//
// @prop {string} namespace.object [o] - Object selector namespace.
//
// @prop {string} namespace.scope [s] - Scope selector namespace.
//
// @prop {string} namespace.test [qa] - Test selector namespace.
//
// @prop {string} namespace.theme [t] - Theme selector namespace.
//
// @prop {string} namespace.utility [u] - Utility selector namespace.
//
// @prop {list} shortcodes - Shortcodes list for parsing.
//
// @access public

$bem-config: (
  'debug': false,
  'separator': (
    'element': '__',
    'modifier': '--',
    'state': '-',
  ),
  'namespace': (
    'component': 'c',
    'hack': '_',
    'object': 'o',
    'scope': 's',
    'test': 'qa',
    'theme': 't',
    'utility': 'u',
  ),
  'shortcodes': (
    'ab': (
      'before',
      'after',
    ),
  ),
) !default;

// Turn debug mode on/off. To get outlines on selectors.
//
// @type Boolean

$bem-debug: map.get($bem-config, 'debug') !default;

// Element separator from parent block.
//
// @type String

$bem-element-separator: map.get(map.get($bem-config, 'separator'), 'element') !default;

// Modifier separator from parent block.
//
// @type String

$bem-modifier-separator: map.get(map.get($bem-config, 'separator'), 'modifier') !default;

// States separator from parent block.
//
// @type String

$bem-state-separator: map.get(map.get($bem-config, 'separator'), 'state') !default;

// Component selector namespace.
//
// @type String

$bem-component-namespace: map.get(map.get($bem-config, 'namespace'), 'component') !default;

// Hack selector namespace.
//
// @type String

$bem-hack-namespace: map.get(map.get($bem-config, 'namespace'), 'hack') !default;

// Object selector namespace.
//
// @type String

$bem-object-namespace: map.get(map.get($bem-config, 'namespace'), 'object') !default;

// Scope selector namespace.
//
// @type String

$bem-scope-namespace: map.get(map.get($bem-config, 'namespace'), 'scope') !default;

// Test selector namespace.
//
// @type String

$bem-test-namespace: map.get(map.get($bem-config, 'namespace'), 'test') !default;

// Theme selector namespace.
//
// @type String

$bem-theme-namespace: map.get(map.get($bem-config, 'namespace'), 'theme') !default;

// Utility selector namespace.
//
// @type String

$bem-utility-namespace: map.get(map.get($bem-config, 'namespace'), 'utility') !default;

// Shortcodes list for parsing.
//
// @type List

$bem-shortcodes: map.get($bem-config, 'shortcodes') !default;
